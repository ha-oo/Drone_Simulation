import random
import matplotlib.pyplot as plt


N = 20                
NUM_DRONES = 3
STEP_LIMIT = 300
STEP_CHOICES = [-2, -1, 0, 1, 2]


target = (random.randint(0, N-1), random.randint(0, N-1))
drones = [(0, 0), (N-1, 0), (0, N-1)]
colors = ['blue', 'green', 'orange']
paths = [[p] for p in drones]
visited = set(drones)


zone_width = N // NUM_DRONES
zones = []
for i in range(NUM_DRONES):
    xmin = i * zone_width
    xmax = (i + 1) * zone_width - 1 if i < NUM_DRONES - 1 else N - 1  
    zones.append((xmin, xmax))

def candidate_moves(i, x, y):
    """드론 i가 다음에 갈 수 있는 후보 좌표들을 만든다."""
    xmin, xmax = zones[i]

    
    base = []
    for dx in STEP_CHOICES:
        for dy in STEP_CHOICES:
            if dx == 0 and dy == 0:
                continue
            nx, ny = x + dx, y + dy
            if 0 <= nx < N and 0 <= ny < N:
                base.append((nx, ny))

   
    if x < xmin:
        toward_zone = [(nx, ny) for (nx, ny) in base if nx >= x]   
    elif x > xmax:
        toward_zone = [(nx, ny) for (nx, ny) in base if nx <= x]   
    else:
      
        toward_zone = [(nx, ny) for (nx, ny) in base if xmin <= nx <= xmax]

  
    not_visited = [(nx, ny) for (nx, ny) in toward_zone if (nx, ny) not in visited]


    if not not_visited and toward_zone:
        return toward_zone
    return not_visited

plt.ion()
fig, ax = plt.subplots(figsize=(6, 6))
found = False

for t in range(STEP_LIMIT):
    ax.clear()

    for i in range(NUM_DRONES):
        x, y = drones[i]
        cands = candidate_moves(i, x, y)

        if cands:
            new_pos = random.choice(cands)
        else:
            new_pos = (x, y) 

        drones[i] = new_pos
        paths[i].append(new_pos)
        visited.add(new_pos)

        xs, ys = zip(*paths[i])
        ax.plot(xs, ys, '-', color=colors[i], alpha=0.65, label=f'Drone {i+1}' if t == 0 else "")
        ax.plot(new_pos[0], new_pos[1], 'o', color=colors[i])


    ax.plot(target[0], target[1], 'rx', markersize=10, label='Target')

    ax.set_xlim(-1, N)
    ax.set_ylim(-1, N)
    ax.set_title(f"Step: {t}")
    if t == 0:
        ax.legend(loc='upper right')
    plt.pause(0.08)

    if target in drones:
        print(f" 구조 완료! ({t}초 만에 발견)")
        found = True
        break

if not found:
    print(" 300번 탐색했지만 구조 대상을 찾지 못했습니다.")

plt.ioff()
plt.show()
